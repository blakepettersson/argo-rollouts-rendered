apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: rollouts-controller
    app.kubernetes.io/instance: argo-rollouts
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argo-rollouts
    app.kubernetes.io/part-of: argo-rollouts
    app.kubernetes.io/version: v1.6.6
    helm.sh/chart: argo-rollouts-2.35.2
  name: argo-rollouts
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/component: rollouts-controller
      app.kubernetes.io/instance: argo-rollouts
      app.kubernetes.io/name: argo-rollouts
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: rollouts-controller
        app.kubernetes.io/instance: argo-rollouts
        app.kubernetes.io/name: argo-rollouts
        env: prod
    spec:
      containers:
      - args:
        - --healthzPort=8080
        - --metricsport=8090
        - --loglevel=info
        - --logformat=text
        - --kloglevel=0
        - --leader-elect
        env:
        - name: STAGE
          value: prod
        image: quay.io/argoproj/argo-rollouts:v1.6.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: healthz
          initialDelaySeconds: 30
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 10
        name: argo-rollouts
        ports:
        - containerPort: 8090
          name: metrics
        - containerPort: 8080
          name: healthz
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /metrics
            port: metrics
          initialDelaySeconds: 15
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 4
        resources:
          limits:
            cpu: 1
            memory: 1Gi
          requests:
            cpu: 250m
            memory: 512Mi
        securityContext: {}
      securityContext:
        runAsNonRoot: true
      serviceAccountName: argo-rollouts
